.. _hensu-no-syurui:

##################################################
変数の種類
##################################################
.. list-table::
   :header-rows: 1
   :widths: 1, 2, 4

   * - 変数
     - スコープ（参照可能な場所）
     - 説明
   * - インベントリ変数
     - インベントリが参照可能な場所（対象の管理対象ノードが参照可能な場所： targets セクションの hosts ディレクティブで決定する）
     - | ・インベントリ内で定義した変数
       | ・インベントリ変数は「ホスト変数」と「グループ変数」を含む
   * - ホスト変数
     - インベントリが参照可能な場所（対象の管理対象ノードが参照可能な場所： targets セクションの hosts ディレクティブで決定する）
     - インベントリ内の管理対象ノードに割り当てた変数
   * - グループ変数
     - インベントリが参照可能な場所（対象の管理対象ノードが参照可能な場所： targets セクションの hosts ディレクティブで決定する）
     - インベントリ内のグループに割り当てた変数
   * - プレイ変数
     - プレイ内
     - | ・vars セクションで定義した変数
       | ・プレイ変数は「タスク変数」、「ロール変数」、「ブロック変数」を含む
   * - マジック変数
     - プレイ内
     - | ・Ansible が予め用意（定義）している変数
       | ・マジック変数は「ファクト変数」を含む
   * - ファクト変数
     - 管理対象ノードがタスクの実行時
     - | ・管理対象ノードごとのシステム情報が格納される変数
       | ・管理対象ノードがタスクを実行するときに参照できる
       | ・変数名の定義は自動で行われる（定義不要）
   * - タスク変数
     - タスク内
     - タスク内で定義した変数
   * - ロール変数
     - ロール内
     - ロール内で定義した変数
   * - ブロック変数
     - ブロック内
     - ブロック内で定義した変数
   * - レジスター変数
     - プレイ内
     - | ・``register`` ディレクティブを使用して定義した変数
       | ・タスクの実行結果が設定される
