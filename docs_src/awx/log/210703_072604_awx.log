[root@awx ~]# curl -sfL https://get.k3s.io | sh
[INFO]  Finding release for channel stable
[INFO]  Using v1.21.2+k3s1 as release
[INFO]  Downloading hash https://github.com/k3s-io/k3s/releases/download/v1.21.2+k3s1/sha256sum-amd64.txt
[INFO]  Downloading binary https://github.com/k3s-io/k3s/releases/download/v1.21.2+k3s1/k3s
[INFO]  Verifying binary download
[INFO]  Installing k3s to /usr/local/bin/k3s
Rancher K3s Common (stable)                                                                                  1.2 kB/s | 1.2 kB     00:01    
依存関係が解決しました。
=============================================================================================================================================
 パッケージ                  アーキテクチャー バージョン                                           リポジトリー                        サイズ
=============================================================================================================================================

（中略）

[INFO]  Creating /usr/local/bin/kubectl symlink to k3s
[INFO]  Creating /usr/local/bin/crictl symlink to k3s
[INFO]  Creating /usr/local/bin/ctr symlink to k3s
[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh
[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh
[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env
[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service
[INFO]  systemd: Enabling k3s unit
Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.
[INFO]  systemd: Starting k3s
[root@awx ~]# cat /etc/systemd/system/k3s.service
[Unit]
Description=Lightweight Kubernetes
Documentation=https://k3s.io
Wants=network-online.target
After=network-online.target

[Install]
WantedBy=multi-user.target

[Service]
Type=notify
EnvironmentFile=-/etc/default/%N
EnvironmentFile=-/etc/sysconfig/%N
EnvironmentFile=-/etc/systemd/system/k3s.service.env
KillMode=process
Delegate=yes
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=1048576
LimitNPROC=infinity
LimitCORE=infinity
TasksMax=infinity
TimeoutStartSec=0
Restart=always
RestartSec=5s
ExecStartPre=/bin/sh -xc '! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service'
ExecStartPre=-/sbin/modprobe br_netfilter
ExecStartPre=-/sbin/modprobe overlay
ExecStart=/usr/local/bin/k3s \
    server \

[root@awx ~]# systemctl status k3s.service
● k3s.service - Lightweight Kubernetes
   Loaded: loaded (/etc/systemd/system/k3s.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2021-07-03 01:28:00 +03; 19s ago
     Docs: https://k3s.io
  Process: 2402 ExecStartPre=/sbin/modprobe overlay (code=exited, status=0/SUCCESS)
  Process: 2395 ExecStartPre=/sbin/modprobe br_netfilter (code=exited, status=0/SUCCESS)
  Process: 2392 ExecStartPre=/bin/sh -xc ! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service (code=exited, status=0/SUCCESS)
 Main PID: 2405 (k3s-server)
    Tasks: 108
   Memory: 859.1M
   CGroup: /system.slice/k3s.service
           ├─2405 /usr/local/bin/k3s server
           ├─2422 containerd 
           ├─3014 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/containerd-shim-runc-v2 -na>
           ├─3056 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/containerd-shim-runc-v2 -na>
           ├─3082 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/containerd-shim-runc-v2 -na>
           ├─3107 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/containerd-shim-runc-v2 -na>
           ├─3114 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/containerd-shim-runc-v2 -na>
           ├─3227 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/unpigz -d -c
           ├─3244 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/unpigz -d -c
           ├─3248 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/unpigz -d -c
           ├─3252 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/unpigz -d -c
           └─3258 /var/lib/rancher/k3s/data/57d64d4b123cea8e276484f00ab3dfa7178a00a35368aa6b43df3e3bd8ce032d/bin/unpigz -d -c

 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.056099    2405 iptables.go:160] Adding iptables rule: -s 10.42.0.0/16 -d 10.42.0.0>
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.059710    2405 iptables.go:160] Adding iptables rule: -s 10.42.0.0/16 -j ACCEPT
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.071304    2405 iptables.go:160] Adding iptables rule: -s 10.42.0.0/16 ! -d 224.0.0>
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.072033    2405 iptables.go:160] Adding iptables rule: -d 10.42.0.0/16 -j ACCEPT
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.084390    2405 iptables.go:160] Adding iptables rule: ! -s 10.42.0.0/16 -d 10.42.0>
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.089824    2405 iptables.go:160] Adding iptables rule: ! -s 10.42.0.0/16 -d 10.42.0>
 7月 03 01:28:01 awx.example.jp k3s[2405]: W0703 01:28:01.257602    2405 handler_proxy.go:102] no RequestInfo found in the context
 7月 03 01:28:01 awx.example.jp k3s[2405]: E0703 01:28:01.257903    2405 controller.go:116] loading OpenAPI spec for "v1beta1.metrics.k8s.io>
 7月 03 01:28:01 awx.example.jp k3s[2405]: , Header: map[Content-Type:[text/plain; charset=utf-8] X-Content-Type-Options:[nosniff]]
 7月 03 01:28:01 awx.example.jp k3s[2405]: I0703 01:28:01.257924    2405 controller.go:129] OpenAPI AggregationController: action for item v>
[root@awx ~]# kubectl get nodes
NAME             STATUS   ROLES                  AGE   VERSION
awx.example.jp   Ready    control-plane,master   51s   v1.21.2+k3s1
[root@awx ~]# kubectl get pods --all-namespaces
NAMESPACE     NAME                                      READY   STATUS      RESTARTS   AGE
kube-system   local-path-provisioner-5ff76fc89d-bcq49   1/1     Running     0          44s
kube-system   coredns-7448499f4d-lwnrm                  1/1     Running     0          44s
kube-system   metrics-server-86cbb8457f-hwdcs           1/1     Running     0          44s
kube-system   helm-install-traefik-crd-xmnx8            0/1     Completed   0          44s
kube-system   helm-install-traefik-6xz9s                0/1     Completed   1          44s
kube-system   svclb-traefik-gw6dj                       2/2     Running     0          17s
kube-system   traefik-97b44b794-9j4xc                   0/1     Running     0          17s
[root@awx ~]# kubectl config set-context --current --namespace=default
Context "default" modified.
[root@awx ~]# kubectl apply -f https://raw.githubusercontent.com/ansible/awx-operator/0.12.0/deploy/awx-operator.yaml
customresourcedefinition.apiextensions.k8s.io/awxs.awx.ansible.com created
customresourcedefinition.apiextensions.k8s.io/awxbackups.awx.ansible.com created
customresourcedefinition.apiextensions.k8s.io/awxrestores.awx.ansible.com created
clusterrole.rbac.authorization.k8s.io/awx-operator created
clusterrolebinding.rbac.authorization.k8s.io/awx-operator created
serviceaccount/awx-operator created
deployment.apps/awx-operator created
[root@awx ~]# kubectl get events -w --all-namespaces
NAMESPACE     LAST SEEN   TYPE      REASON                    OBJECT                                         MESSAGE
default       2m35s       Normal    Starting                  node/awx.example.jp                            Starting kubelet.
default       2m35s       Warning   InvalidDiskCapacity       node/awx.example.jp                            invalid capacity 0 on image file
system
default       2m35s       Normal    NodeHasSufficientMemory   node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasSufficientMemory
default       2m35s       Normal    NodeHasNoDiskPressure     node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasNoDiskPressure
default       2m35s       Normal    NodeHasSufficientPID      node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasSufficientPID

（中略）

default       39s         Normal    SuccessfulCreate          replicaset/awx-operator-545497f7d5             Created pod: awx-operator-545497
f7d5-dd6x7
default       39s         Normal    Scheduled                 pod/awx-operator-545497f7d5-dd6x7              Successfully assigned default/aw
x-operator-545497f7d5-dd6x7 to awx.example.jp
default       39s         Normal    Pulling                   pod/awx-operator-545497f7d5-dd6x7              Pulling image "quay.io/ansible/a
wx-operator:0.12.0"
default       14s         Normal    Pulled                    pod/awx-operator-545497f7d5-dd6x7              Successfully pulled image "quay.
io/ansible/awx-operator:0.12.0" in 24.980793901s
default       12s         Normal    Created                   pod/awx-operator-545497f7d5-dd6x7              Created container awx-operator
default       12s         Normal    Started                   pod/awx-operator-545497f7d5-dd6x7              Started container awx-operator
^C[root@awx ~]# kubectl get pods
NAME                            READY   STATUS    RESTARTS   AGE
awx-operator-545497f7d5-dd6x7   1/1     Running   0          70s
[root@awx ~]# kubectl logs -f deployment.apps/awx-operator
{"level":"info","ts":1625265009.5248892,"logger":"cmd","msg":"Go Version: go1.13.15"}
{"level":"info","ts":1625265009.5249238,"logger":"cmd","msg":"Go OS/Arch: linux/amd64"}
{"level":"info","ts":1625265009.524929,"logger":"cmd","msg":"Version of ansible-operator: v0.19.4"}
{"level":"info","ts":1625265009.5249329,"logger":"cmd","msg":"Git commit of ansible-operator: 125d0dfcc71fef4f9d7e2a42b1354cb79ffdee03"}
{"level":"info","ts":1625265009.5251622,"logger":"cmd","msg":"Watching all namespaces.","Namespace":""}
{"level":"info","ts":1625265010.3291895,"logger":"controller-runtime.metrics","msg":"metrics server is starting to listen","addr":"0.0.0.0:83
83"}
{"level":"info","ts":1625265010.329772,"logger":"watches","msg":"Environment variable not set; using default value","envVar":"WORKER_AWX_AWX_
ANSIBLE_COM","default":1}
{"level":"info","ts":1625265010.3298202,"logger":"watches","msg":"Environment variable not set; using default value","envVar":"ANSIBLE_VERBOS

（中略）


{"level":"info","ts":1625265015.2855458,"logger":"controller-runtime.controller","msg":"Starting workers","controller":"awxbackup-controller"
,"worker count":1}
{"level":"info","ts":1625265015.2854798,"logger":"controller-runtime.controller","msg":"Starting Controller","controller":"awxrestore-control
ler"}
{"level":"info","ts":1625265015.2855923,"logger":"controller-runtime.controller","msg":"Starting workers","controller":"awxrestore-controller
","worker count":1}
{"level":"info","ts":1625265015.2854474,"logger":"controller-runtime.controller","msg":"Starting Controller","controller":"awx-controller"}
{"level":"info","ts":1625265015.285608,"logger":"controller-runtime.controller","msg":"Starting workers","controller":"awx-controller","worke
r count":1}
^C
[root@awx ~]# kubectl create namespace awx
namespace/awx created
[root@awx ~]# kubectl config set-context --current --namespace=awx
Context "default" modified.
[root@awx ~]# vi myawx.yml
[root@awx ~]# cat myawx.yml
---
apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx
spec:
  ingress_type: Ingress
  route_tls_termination_mechanism: edge
  hostname: awx.example.jp

[root@awx ~]# kubectl apply -f myawx.yml
awx.awx.ansible.com/awx created
[root@awx ~]# kubectl get events -w --all-namespaces
NAMESPACE     LAST SEEN   TYPE      REASON                    OBJECT                                         MESSAGE
default       5m33s       Normal    Starting                  node/awx.example.jp                            Starting kubelet.
default       5m33s       Warning   InvalidDiskCapacity       node/awx.example.jp                            invalid capacity 0 on image file
system
default       5m33s       Normal    NodeHasSufficientMemory   node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasSufficientMemory
default       5m33s       Normal    NodeHasNoDiskPressure     node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasNoDiskPressure
default       5m33s       Normal    NodeHasSufficientPID      node/awx.example.jp                            Node awx.example.jp status is no
w: NodeHasSufficientPID

（中略）

awx           0s          Normal    Started                   pod/awx-7c5d846c88-knht2                                         Started contai
ner awx-task
awx           0s          Normal    Pulling                   pod/awx-7c5d846c88-knht2                                         Pulling image 
"quay.io/ansible/awx-ee:0.5.0"
awx           0s          Normal    Pulled                    pod/awx-7c5d846c88-knht2                                         Successfully p
ulled image "quay.io/ansible/awx-ee:0.5.0" in 56.93414422s
awx           0s          Normal    Created                   pod/awx-7c5d846c88-knht2                                         Created contai
ner awx-ee
awx           0s          Normal    Started                   pod/awx-7c5d846c88-knht2                                         Started contai
ner awx-ee
^C[root@awx ~]# kubectl logs -f deployment.apps/awx-operator -n default
{"level":"info","ts":1625265009.5248892,"logger":"cmd","msg":"Go Version: go1.13.15"}
{"level":"info","ts":1625265009.5249238,"logger":"cmd","msg":"Go OS/Arch: linux/amd64"}
{"level":"info","ts":1625265009.524929,"logger":"cmd","msg":"Version of ansible-operator: v0.19.4"}
{"level":"info","ts":1625265009.5249329,"logger":"cmd","msg":"Git commit of ansible-operator: 125d0dfcc71fef4f9d7e2a42b1354cb79ffdee03"}
{"level":"info","ts":1625265009.5251622,"logger":"cmd","msg":"Watching all namespaces.","Namespace":""}
{"level":"info","ts":1625265010.3291895,"logger":"controller-runtime.metrics","msg":"metrics server is starting to listen","addr":"0.0.0.0:83
83"}
{"level":"info","ts":1625265010.329772,"logger":"watches","msg":"Environment variable not set; using default value","envVar":"WORKER_AWX_AWX_
ANSIBLE_COM","default":1}
{"level":"info","ts":1625265010.3298202,"logger":"watches","msg":"Environment variable not set; using default value","envVar":"ANSIBLE_VERBOS
ITY_AWX_AWX_ANSIBLE_COM","default":2}

（中略）

{"level":"info","ts":1625265640.3923583,"logger":"runner","msg":"Ansible-runner exited successfully","job":"5486140987150761883","name":"awx"
,"namespace":"awx"}

--------------------------- Ansible Task Status Event StdOut  -----------------

PLAY RECAP *********************************************************************
localhost                  : ok=53   changed=0    unreachable=0    failed=0    skipped=39   rescued=0    ignored=0   


-------------------------------------------------------------------------------
^C
[root@awx ~]# kubectl get pods
NAME                   READY   STATUS    RESTARTS   AGE
awx-postgres-0         1/1     Running   0          13m
awx-7c5d846c88-knht2   4/4     Running   0          12m
[root@awx ~]# kubectl get svc
NAME           TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE
awx-postgres   ClusterIP   None           <none>        5432/TCP   13m
awx-service    ClusterIP   10.43.172.89   <none>        80/TCP     13m
[root@awx ~]# kubectl get secret awx-admin-password -o jsonpath='{.data.password}' | base64 --decode
SXISjPJsoFP3yre0voCHWjt7ODCIdfil[root@awx ~]# 
